from requests import options
import streamlit as st
import pandas as pd
import numpy as np
from matplotlib import legend, pyplot as plt
from datetime import datetime as dt
import matplotlib.dates as mdates
from bokeh.plotting import figure, show
from bokeh.models import ColumnDataSource, HoverTool

# descomentar para vers√£o online
#BASE_URL = "https://raw.githubusercontent.com/LFBossa/MapaSaudeSC/main/"
BASE_URL = "./"

st.set_page_config(  # layout="wide",
    page_title="Mapa da Sa√∫de SC",
    page_icon="üßä")


@st.cache
def get_dados():
    doen√ßas = pd.read_csv(BASE_URL + "parsed-data/saude-series.csv")
    popula√ß√£o = pd.read_csv(BASE_URL + "parsed-data/populacao.csv")
    regioes = pd.read_csv(BASE_URL + "data/geoloc/regioes-saude.csv",
                          dtype={"REGIAO": "category", "municipio": "str"})
    regioes.set_index("CODIBGE", inplace=True)
    popula√ß√£o["regi√£o"] = popula√ß√£o.COD_IBGE.apply(
        lambda x: regioes.loc[x, "REGIAO"])
    popula√ß√£o.set_index("COD_IBGE", inplace=True)

    def get_pop(ibge, year):
        if year == 2022:
            year -= 1
        elif year == 2013:
            year += 1
        return popula√ß√£o.loc[ibge, str(year)]

    def get_pop_df(row):
        return get_pop(row["Ibge"], row["ano"])

    doen√ßas["popula√ß√£o"] = doen√ßas.apply(get_pop_df, axis=1)
    doen√ßas["regi√£o"] = doen√ßas.Ibge.apply(lambda x: regioes.loc[x, "REGIAO"])

    return doen√ßas, popula√ß√£o, regioes


def pop_regiao(regiao, year):
    if year == 2022:
        year -= 1
    elif year == 2013:
        year += 1
    return popula√ß√£o_das_regi√µes.loc[regiao, str(year)]


def pop_estado(ano):
    if ano == 2022:
        ano -= 1
    elif ano == 2013:
        ano += 1
    return popula√ß√£o[str(ano)].sum()


doen√ßas, popula√ß√£o, regioes = get_dados()

popula√ß√£o_das_regi√µes = popula√ß√£o.groupby("regi√£o").sum()


doenca_select = st.sidebar.selectbox(
    label="Selecione a doen√ßa", options=doen√ßas.columns[1:13])

municipio_select = st.sidebar.selectbox(label="Selecione o munic√≠pio",
                                        options=regioes.index, format_func=lambda x: regioes.loc[x, "municipio"].title())

cidade_label = regioes.loc[municipio_select, "municipio"].title()
codibge = municipio_select
regiao = regioes.loc[int(codibge), "REGIAO"]
doen√ßa = doenca_select
pvt_doen√ßa_regi√£o = pd.pivot_table(
    doen√ßas[["referencia", "regi√£o", doen√ßa]], index="referencia", columns="regi√£o", aggfunc=sum)[(doen√ßa, regiao)]
popula√ß√£o_regi√£o = [pop_regiao(regiao, ano)
                    for ano in (pvt_doen√ßa_regi√£o.index.values // 100)]
pvt_doen√ßa_estado = pd.pivot_table(
    doen√ßas[["referencia", doen√ßa]], index="referencia",  aggfunc=sum)[doen√ßa]
popula√ß√£o_estado = [pop_estado(ano) for ano in (
    pvt_doen√ßa_estado.index.values // 100)]


sr_doen√ßa_cidade = doen√ßas.query(
    f"Ibge == {codibge}").set_index("referencia")[doen√ßa]
sr_popula√ß√£o_cidade = doen√ßas.query(
    f"Ibge == {codibge}").set_index("referencia")["popula√ß√£o"]

dadddos = pd.concat([sr_doen√ßa_cidade/sr_popula√ß√£o_cidade*1000,
                     pvt_doen√ßa_regi√£o/popula√ß√£o_regi√£o*1000,
                     pvt_doen√ßa_estado/popula√ß√£o_estado*1000], axis=1).sort_index().reset_index()
datas = [dt.strptime(str(x), "%Y%m") for x in dadddos["referencia"].values]
dadddos["referencia"] = datas
dadddos.set_index("referencia", inplace=True)
dadddos.columns = [cidade_label, regiao, "SC"]

source = ColumnDataSource(dadddos)
TOOLTIPS = HoverTool(
    tooltips=[
        ("data", "@referencia{%F}"),
        ("cidade", f"@{{{cidade_label}}}"),
        ("regi√£o", f"@{{{regiao}}}"),
        ("estado", f"@{{SC}}"),
    ],
    formatters={
        '@referencia': 'datetime',  # use 'datetime' formatter for '@date' field
    },)

p = figure(title=f"√çndice de {doen√ßa} para cada mil habitantes em {cidade_label}",
           x_axis_type='datetime')
p.line(x="referencia", y=cidade_label, source=source,
       line_color="red", legend_label=cidade_label, line_width=2)
p.line(x="referencia", y=regiao, source=source,
       legend_label=regiao, alpha=0.7)
p.line(x="referencia", y="SC", source=source,
       legend_label="SC", alpha=0.5, line_dash="dashed")
p.add_tools(TOOLTIPS)
p.legend.location = 'top_left'
st.bokeh_chart(p, use_container_width=True)
#fig, ax = plt.subplots(figsize=(10,5))
# dadddos.plot(ax=ax)
#ax.set_title(f"√çndice de {dd} para cada mil habitantes em {cdd}")
# st.pyplot(fig)
